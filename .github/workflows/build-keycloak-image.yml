name: Build keycloak image
on:
  workflow_call:
    secrets:
      submodules-app-private-key:
        required: false
        description: 'The private-key of the app used for authentication. Only needed if `recursive-submodule-checkout` is true'
      submodules-app-id:
        required: false
        description: 'The id of the app used for authentication. Only needed if `recursive-submodule-checkout` is true.'
      submodules-app-installation-id:
        required: false
        description: 'The installation id of the app used for authentication. Only needed if `recursive-submodule-checkout` is true.'

jobs:
  build-keycloak-image:
    runs-on: global-build-docker-runner
    permissions:
      contents: read
      packages: write
    steps:
      - uses: Nastaliss/get-github-app-pat@v1
        id: githubAppAuth
        with:
          app-id: ${{ secrets.submodules-app-id }}
          app-installation-id: ${{ secrets.submodules-app-installation-id }}
          app-private-key: ${{ secrets.submodules-app-private-key }}
      - name: '[SUBMODULES] Checkout with submodules'
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ steps.githubAppAuth.outputs.access-token }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ steps.githubAppAuth.outputs.access-token }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/cybercri/projects-backend
          tags: type=raw,value=keycloak
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          pull: true
          file: Dockerfile.keycloak
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}-buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.tags }}-buildcache,mode=max
