name: Lint & test
on:
  workflow_call:
    inputs:
      submodules-app-id:
        type: string
        required: false
        description: 'The id of the app used for authentication. Only needed if `recursive-submodule-checkout` is true.'
        default: "213843"
      submodules-app-installation-id:
        type: string
        required: false
        description: 'The installation id of the app used for authentication. Only needed if `recursive-submodule-checkout` is true.'
        default: "26790862"
    secrets:
      submodules-app-private-key:
        required: false
        description: 'The private-key of the app used for authentication. Only needed if `recursive-submodule-checkout` is true'

jobs:
  tests:
    runs-on: [self-hosted, default-runner]
    steps:
      # https://dev.to/dtinth/authenticating-as-a-github-app-in-a-github-actions-workflow-27co
      # The following steps are only needed for recursive submodules checkout
      - name: "[SUBMODULES] Setup Node.js for npx"
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: "[SUBMODULES] Obtain GitHub App Installation Access Token"
        id: githubAppAuth
        run: |
          echo "${{ secrets.submodules-app-private-key }}" > /tmp/submodules-app-private-key.pem
          TOKEN="$(npx obtain-github-app-installation-access-token \
          -a ${{ inputs.submodules-app-id }} \
          -i ${{ inputs.submodules-app-installation-id }} \
          -k /tmp/submodules-app-private-key.pem)"
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"
      - name: "[SUBMODULES] Checkout with submodules"
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ steps.githubAppAuth.outputs.token }}
      # The previous steps are only needed for recursive submodules checkout
      - name: Check the code formatting
        run: docker compose -f docker-compose-tests.yml run projects "make format-check"
      - name: Run the linter
        run: docker compose -f docker-compose-tests.yml run projects "make lint"
      - name: Check that migrations are up-to-date
        run: docker compose -f docker-compose-tests.yml run projects "make check-migrations"
      - name: Check that translations are up-to-date
        run: docker compose -f docker-compose-tests.yml run projects "make makemessages-check"
      - name: Run unit tests
        run: docker compose -f docker-compose-tests.yml run projects "make test"
