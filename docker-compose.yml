include:
  - path: ./keycloak-lpi-theme/theme/docker-compose.yml
    project_directory: ./keycloak-lpi-theme/theme/
    env_file: ./.env

services:
  postgres:
    image: pgvector/pgvector:pg14
    user: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_EXTENSIONS=pg_trgm, unaccent
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    entrypoint:
      - /usr/bin/bash
      - -c
    command:
      # Create the bucket projects before starting minio
      - mkdir -p /data/projects && minio server --console-address :9001 /data
    volumes:
      - s3:/data

  redis:
    image: redis:6.2-bullseye
    command:
      # Enable persistence
      - redis-server
      - --save
      - "60"
      - "1"
      - --loglevel
      - warning
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  mjml:
    image: danihodovic/mjml-server
    ports:
      - 15500:15500

  projects-backend:
    container_name: projects-backend
    build:
      context: .
      args:
        EXPORT_FLAG: --with dev
    env_file:
      - .env
    user: root
    restart: unless-stopped
    command: uvicorn projects.asgi:application --host 0.0.0.0 --port 8000 --reload
    ports:
      - 8000:8000
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true
      postgres:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: projects.settings.local
      DEBUG: ${DEBUG}
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
    volumes:
      - .:/app

  celery:
    build: .
    env_file:
      - .env
    command: celery -A projects worker -B -l info
    restart: unless-stopped
    depends_on:
      - projects-backend
      - redis
    environment:
      DJANGO_SETTINGS_MODULE: projects.settings.local

  opensearch-node:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node
    environment:
      cluster.name: opensearch-cluster
      node.name: opensearch-node
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: -Xms1024m -Xmx1024m
      DISABLE_INSTALL_DEMO_CONFIG: true
      DISABLE_SECURITY_PLUGIN: true
      discovery.type: single-node
      logger.org.opensearch: ERROR
      cluster.routing.allocation.disk.watermark.flood_stage: 100%
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600

volumes:
  opensearch-data:
  postgres-data:
  s3:
  redis:
