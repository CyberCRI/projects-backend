# Generated by Django 4.2.22 on 2025-09-29 16:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgvector.django
import services.mistral.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmbeddingError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_type", models.CharField(max_length=255)),
                ("item_id", models.CharField(max_length=255)),
                ("error", models.CharField(max_length=255)),
                ("traceback", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProjectEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("embedding", pgvector.django.VectorField(dimensions=1024, null=True)),
                ("is_visible", models.BooleanField(default=False)),
                ("summary", models.TextField(blank=True)),
                ("prompt_hashcode", models.CharField(default="", max_length=64)),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, services.mistral.models.HasWeight),
        ),
        migrations.CreateModel(
            name="TagEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("embedding", pgvector.django.VectorField(dimensions=1024, null=True)),
                ("is_visible", models.BooleanField(default=False)),
                ("summary", models.TextField(blank=True)),
                ("prompt_hashcode", models.CharField(default="", max_length=64)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserProjectsEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("embedding", pgvector.django.VectorField(dimensions=1024, null=True)),
                ("is_visible", models.BooleanField(default=False)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects_embedding",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, services.mistral.models.HasWeight),
        ),
        migrations.CreateModel(
            name="UserProfileEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("embedding", pgvector.django.VectorField(dimensions=1024, null=True)),
                ("is_visible", models.BooleanField(default=False)),
                ("summary", models.TextField(blank=True)),
                ("prompt_hashcode", models.CharField(default="", max_length=64)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_embedding",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, services.mistral.models.HasWeight),
        ),
        migrations.CreateModel(
            name="UserEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("embedding", pgvector.django.VectorField(dimensions=1024, null=True)),
                ("is_visible", models.BooleanField(default=False)),
                (
                    "item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="embedding",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
