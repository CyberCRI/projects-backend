{{- if .Values.celery.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  {{- (tpl ($.Values.celery.commonLabels | toYaml ) $) | nindent 4 }}
    {{- if .Values.sablier.enabled }}
    sablier.enable: "true"
    sablier.group: {{ .Values.sablier.groupName }}
    {{- end }}
  name: {{ tpl $.Values.fullName $ }}-celery
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: {{ $.Values.celery.replicaCount }}
  selector:
    matchLabels:
    {{- (tpl ($.Values.celery.commonLabels | toYaml ) $) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- (tpl ($.Values.celery.commonLabels | toYaml ) $) | nindent 8 }}
        {{ printf "%s-client" $.Values.redis.helmReleaseName }}: "true"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      securityContext:
        {{- include "common.security.podSecurityContext.restricted" dict | nindent 8 }}

      containers:
      {{- with $.Values.image }}
      - image: {{ tpl (printf "%s/%s:%s" .repository .path .tag) $ }}
      {{- end }}
        imagePullPolicy: IfNotPresent
        name: projects-backend-celery
        args:
          - celery
          - -A
          - projects
          - worker
          - -B
          - -l
          - info
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - ./secrets-entrypoint.sh celery -A projects inspect ping
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - ./secrets-entrypoint.sh celery -A projects inspect ping
          failureThreshold: 2
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        envFrom:
          - configMapRef:
              name: {{ tpl $.Values.fullName $ }}
        resources:
          {{- .Values.celery.resources | toYaml | nindent 10 }}
        securityContext:
          {{- include "common.security.containerSecurityContext.restricted" dict | nindent 10 }}
      {{- if .Values.config.sensitive }}
        volumeMounts:
        - name: secrets
          mountPath: "/secrets"
          readOnly: true
      {{- end }}
      {{- with .Values.celery.metrics}}
      {{- if .enabled }}
      - name: metrics
        imagePullPolicy: IfNotPresent
        {{- with .image }}
        image: {{ tpl (printf "%s/%s:%s" .repository .path .tag) $ }}
        {{- end }}
        ports:
        - name: http
          containerPort: 9808
          protocol: TCP
        {{- with .readinessProbe }}
        readinessProbe:
          httpGet:
            path: /health
            port: http
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
        {{- end }}
        {{- with .livenessProbe }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          timeoutSeconds: {{ .timeoutSeconds }}
          failureThreshold: {{ .failureThreshold }}
          periodSeconds: {{ .periodSeconds }}
          successThreshold: {{ .successThreshold }}
        {{- end }}
        env:
        - name: CE_BROKER_URL
          value: {{ tpl $.Values.config.nonSensitive.CELERY_BROKER_URL $ }}
        securityContext:
          {{- include "common.security.containerSecurityContext.restricted" dict | nindent 10 }}
      {{- end }}
      {{- end }}
      {{- if .Values.config.sensitive }}
      volumes:
      - name: secrets
        secret:
          secretName: {{ tpl $.Values.fullName $ }}
      {{- end }}
{{- end }}
