apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s.service-account-token" .Values.workflowRbac.serviceAccountName }}
  annotations:
    kubernetes.io/service-account.name: {{ .Values.workflowRbac.serviceAccountName }}
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.workflowRbac.serviceAccountName }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.workflowRbac.serviceAccountName }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.workflowRbac.serviceAccountName }}
roleRef:
  kind: ClusterRole
  name: {{ .Values.workflowRbac.executorClusterRoleName}}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ tpl $.Values.fullName $ }}
spec:
  entrypoint: sort
  serviceAccountName: {{ .Values.workflowRbac.serviceAccountName }}
  # securityContext:
  #   runAsNonRoot: true
  #   runAsUser: 10000
  #   runAsGroup: 10000
  #   fsGroup: 10000
  #   seccompProfile:
  #     type: RuntimeDefault
  templates:
    - name: drop-db
      container:
      {{- with $.Values.image }}
        image: {{ tpl (printf "%s/%s:%s" .repository .path .tag) $ }}
      {{- end }}
        args: ["make", "dropdb"]
        envFrom:
        - configMapRef:
            name: {{ tpl $.Values.fullName $ }}
        volumeMounts:
      {{- if .Values.config.sensitive }}
        - name: secrets
          mountPath: "/secrets"
          readOnly: true
      {{- end }}
      volumes:
      {{- if .Values.config.sensitive }}
      - name: secrets
        secret:
          secretName: {{ tpl $.Values.fullName $ }}
      {{- end }}
