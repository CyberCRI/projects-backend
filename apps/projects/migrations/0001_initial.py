# Generated by Django 3.2.12 on 2022-04-05 14:43

import apps.projects.models
from django.conf import settings
from django.contrib.postgres.operations import UnaccentExtension
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        ('misc', '0001_initial'),
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.CharField(auto_created=True, db_index=True, default=apps.projects.models.uuid_generator, max_length=8)),
                ('title', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, default='')),
                ('purpose', models.TextField(blank=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_shareable', models.BooleanField(default=False)),
                ('publication_status', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('org', 'Org')], default='private', max_length=10)),
                ('life_status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('toreview', 'To Review')], default='running', max_length=10)),
                ('language', models.CharField(choices=[('fr', 'French'), ('en', 'English')], default='fr', max_length=2)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('sdgs', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(choices=[(1, 'No poverty'), (2, 'Zero hunger'), (3, 'Good health and well-being'), (4, 'Quality education'), (5, 'Gender equality'), (6, 'Clean water and sanitation'), (7, 'Affordable and clean energy'), (8, 'Decent work and economic growth'), (9, 'Industry, innovation and infrastructure'), (10, 'Reduces inequalities'), (11, 'Sustainable cities and communities'), (12, 'Responsible consumption & production'), (13, 'Climate action'), (14, 'Life below water'), (15, 'Life on land'), (16, 'Peace, justice and strong institutions'), (17, 'Partnerships for the goals')]), blank=True, default=list, size=17)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('header_image', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='files.image')),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.CharField(auto_created=True, default=apps.projects.models.uuid_generator, max_length=8, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, default='')),
                ('purpose', models.TextField(blank=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_shareable', models.BooleanField(default=False)),
                ('publication_status', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('org', 'Org')], default='private', max_length=10)),
                ('life_status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('toreview', 'To Review')], default='running', max_length=10)),
                ('language', models.CharField(choices=[('fr', 'French'), ('en', 'English')], default='fr', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('sdgs', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(choices=[(1, 'No poverty'), (2, 'Zero hunger'), (3, 'Good health and well-being'), (4, 'Quality education'), (5, 'Gender equality'), (6, 'Clean water and sanitation'), (7, 'Affordable and clean energy'), (8, 'Decent work and economic growth'), (9, 'Industry, innovation and infrastructure'), (10, 'Reduces inequalities'), (11, 'Sustainable cities and communities'), (12, 'Responsible consumption & production'), (13, 'Climate action'), (14, 'Life below water'), (15, 'Life on land'), (16, 'Peace, justice and strong institutions'), (17, 'Partnerships for the goals')]), blank=True, default=list, size=17)),
                ('categories', models.ManyToManyField(related_name='projects', to='organizations.ProjectCategory')),
                ('header_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_header', to='files.image')),
                ('images', models.ManyToManyField(related_name='projects', to='files.Image')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('member', 'Member'), ('reviewer', 'Reviewer')], max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, to_field='keycloak_id')),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='member_of', through='projects.ProjectMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='organizations',
            field=models.ManyToManyField(related_name='projects', to='organizations.Organization'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(related_name='projects', to='misc.Tag'),
        ),
        migrations.AddField(
            model_name='project',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.template'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('type', models.CharField(choices=[('team', 'Team'), ('impact', 'Impact')], default='team', max_length=6)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalProjectMember',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('member', 'Member'), ('reviewer', 'Reviewer')], max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='projects.project')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, to_field='keycloak_id')),
            ],
            options={
                'verbose_name': 'historical project member',
                'verbose_name_plural': 'historical project members',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProject_tags',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('m2m_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, to='projects.historicalproject')),
                ('project', models.ForeignKey(blank=True, db_constraint=False, db_tablespace='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='projects.project')),
                ('tag', models.ForeignKey(blank=True, db_constraint=False, db_tablespace='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='misc.tag')),
            ],
            options={
                'verbose_name': 'HistoricalProject_tags',
            },
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='history_relation',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='archive', to='projects.project'),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='template',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.template'),
        ),
        migrations.CreateModel(
            name='BlogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('images', models.ManyToManyField(related_name='blog_entries', to='files.Image')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_entries', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_to', to='projects.project')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_projects', to='projects.project')),
            ],
            options={
                'unique_together': {('project', 'target')},
            },
        ),
        UnaccentExtension(),
        migrations.RunSQL(
            sql='CREATE TEXT SEARCH CONFIGURATION english_conf( COPY = english );'
            'ALTER TEXT SEARCH CONFIGURATION english_conf '
            'ALTER MAPPING FOR hword, hword_part, word '
            'WITH unaccent, english_stem;',
            reverse_sql='DROP TEXT SEARCH CONFIGURATION english_conf;'
        ),
    ]
