# Generated by Django 3.2.12 on 2022-04-05 14:43

import apps.organizations.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('misc', '0001_initial'),
        ('files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True)),
                ('images', models.ManyToManyField(related_name='faqs', to='files.Image')),
            ],
            bases=(models.Model, apps.organizations.models.OrganizationRelated),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('background_color', models.CharField(blank=True, max_length=9)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('dashboard_title', models.CharField(max_length=255)),
                ('dashboard_subtitle', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=255)),
                ('language', models.CharField(choices=[('fr', 'French'), ('en', 'English')], default='fr', max_length=2)),
                ('website_url', models.CharField(blank=True, max_length=255)),
                ('main_org_logo_visibility', models.BooleanField(default=True)),
                ('main_org_logo_background_color', models.CharField(blank=True, default='#FFFFFFFF', max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('banner_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organization_banner', to='files.image')),
                ('faq', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.faq')),
                ('images', models.ManyToManyField(related_name='organizations', to='files.Image')),
                ('logo_image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organization_logo', to='files.image')),
            ],
            bases=(models.Model, apps.organizations.models.OrganizationRelated),
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_placeholder', models.CharField(blank=True, max_length=255)),
                ('description_placeholder', models.TextField(blank=True)),
                ('goal_placeholder', models.CharField(blank=True, max_length=255)),
                ('blogentry_placeholder', models.TextField(blank=True)),
                ('images', models.ManyToManyField(related_name='templates', to='files.Image')),
            ],
            bases=(models.Model, apps.organizations.models.OrganizationRelated),
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='name of the category', max_length=100)),
                ('description', models.TextField(blank=True, help_text=' description of the category')),
                ('background_color', models.CharField(blank=True, max_length=9)),
                ('foreground_color', models.CharField(blank=True, max_length=9)),
                ('is_reviewable', models.BooleanField(default=False)),
                ('order_index', models.SmallIntegerField(default=0)),
                ('background_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_category_background', to='files.image')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_categories', to='organizations.organization')),
                ('tags', models.ManyToManyField(related_name='project_categories', to='misc.Tag')),
                ('template', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_category', to='organizations.template')),
            ],
            bases=(models.Model, apps.organizations.models.OrganizationRelated),
        ),
        migrations.CreateModel(
            name='OrganizationDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('website_url', models.CharField(blank=True, max_length=255)),
                ('language', models.CharField(choices=[('fr', 'French'), ('en', 'English')], default='fr', max_length=2)),
                ('logo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organization_directory_logo', to='files.image')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='organization_directory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.organizationdirectory'),
        ),
        migrations.AddField(
            model_name='organization',
            name='tags',
            field=models.ManyToManyField(to='misc.Tag'),
        ),
        migrations.CreateModel(
            name='HistoricalProjectCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(help_text='name of the category', max_length=100)),
                ('description', models.TextField(blank=True, help_text=' description of the category')),
                ('background_color', models.CharField(blank=True, max_length=9)),
                ('foreground_color', models.CharField(blank=True, max_length=9)),
                ('is_reviewable', models.BooleanField(default=False)),
                ('order_index', models.SmallIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('background_image', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='files.image')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization')),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.template')),
            ],
            options={
                'verbose_name': 'historical project category',
                'verbose_name_plural': 'historical project categorys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
