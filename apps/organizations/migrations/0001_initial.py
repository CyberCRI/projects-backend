# Generated by Django 4.2.7 on 2024-01-05 17:16

import apps.commons.db.abc
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("files", "0001_initial"),
        ("misc", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Faq",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField(blank=True)),
                (
                    "images",
                    models.ManyToManyField(related_name="faqs", to="files.image"),
                ),
            ],
            bases=(models.Model, apps.commons.db.abc.OrganizationRelated),
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("permissions_up_to_date", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("code", models.CharField(max_length=50, unique=True)),
                ("dashboard_title", models.CharField(max_length=255)),
                ("dashboard_subtitle", models.CharField(max_length=255)),
                ("contact_email", models.EmailField(max_length=255)),
                (
                    "language",
                    models.CharField(
                        choices=[("fr", "French"), ("en", "English")],
                        default="en",
                        max_length=2,
                    ),
                ),
                ("website_url", models.CharField(blank=True, max_length=255)),
                (
                    "is_logo_visible_on_parent_dashboard",
                    models.BooleanField(default=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("access_request_enabled", models.BooleanField(default=False)),
                (
                    "banner_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="organization_banner",
                        to="files.image",
                    ),
                ),
                (
                    "faq",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="organization",
                        to="organizations.faq",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="organizations", to="auth.group"
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        related_name="organizations", to="files.image"
                    ),
                ),
                (
                    "logo_image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_logo",
                        to="files.image",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="organizations.organization",
                    ),
                ),
                ("wikipedia_tags", models.ManyToManyField(to="misc.wikipediatag")),
            ],
            options={
                "permissions": (
                    ("view_stat", "Can view stats"),
                    ("view_org_project", "Can view community projects"),
                    ("view_org_projectuser", "Can view community users"),
                    ("view_org_peoplegroup", "Can view community groups"),
                    ("lock_project", "Can lock and unlock a project"),
                    ("duplicate_project", "Can duplicate a project"),
                    ("change_locked_project", "Can update a locked project"),
                    ("manage_accessrequest", "Can manage access requests"),
                    ("view_project", "Can view projects"),
                    ("add_project", "Can add projects"),
                    ("change_project", "Can change projects"),
                    ("delete_project", "Can delete projects"),
                    ("view_projectuser", "Can view users"),
                    ("add_projectuser", "Can add users"),
                    ("change_projectuser", "Can change users"),
                    ("delete_projectuser", "Can delete users"),
                    ("view_peoplegroup", "Can view groups"),
                    ("add_peoplegroup", "Can add groups"),
                    ("change_peoplegroup", "Can change groups"),
                    ("delete_peoplegroup", "Can delete groups"),
                    ("add_tag", "Can add tags"),
                    ("change_tag", "Can change tags"),
                    ("delete_tag", "Can delete tags"),
                    ("add_faq", "Can add faqs"),
                    ("change_faq", "Can change faqs"),
                    ("delete_faq", "Can delete faqs"),
                    ("add_projectcategory", "Can add project categories"),
                    ("change_projectcategory", "Can change project categories"),
                    ("delete_projectcategory", "Can delete project categories"),
                    ("add_review", "Can add reviews"),
                    ("change_review", "Can change reviews"),
                    ("delete_review", "Can delete reviews"),
                    ("add_comment", "Can add comments"),
                    ("change_comment", "Can change comments"),
                    ("delete_comment", "Can delete comments"),
                    ("add_follow", "Can add follows"),
                    ("change_follow", "Can change follows"),
                    ("delete_follow", "Can delete follows"),
                    ("add_invitation", "Can add invitation links"),
                    ("change_invitation", "Can change invitation links"),
                    ("delete_invitation", "Can delete invitation links"),
                ),
                "subscopes": (
                    ("project", "projects"),
                    ("projectuser", "users"),
                    ("peoplegroup", "groups"),
                ),
                "write_only_subscopes": (
                    ("tag", "tags"),
                    ("faq", "faqs"),
                    ("projectcategory", "project categories"),
                    ("review", "reviews"),
                    ("comment", "comments"),
                    ("follow", "follows"),
                    ("invitation", "invitation links"),
                ),
            },
            bases=(models.Model, apps.commons.db.abc.OrganizationRelated),
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_placeholder",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("description_placeholder", models.TextField(blank=True, default="")),
                (
                    "goal_placeholder",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "blogentry_title_placeholder",
                    models.TextField(blank=True, default="", max_length=255),
                ),
                ("blogentry_placeholder", models.TextField(blank=True, default="")),
                ("goal_title", models.CharField(blank=True, max_length=255)),
                ("goal_description", models.TextField(blank=True)),
                (
                    "language",
                    models.CharField(
                        choices=[("fr", "French"), ("en", "English")],
                        default="en",
                        max_length=2,
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(related_name="templates", to="files.image"),
                ),
            ],
            bases=(models.Model, apps.commons.db.abc.OrganizationRelated),
        ),
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="name of the category", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="description of the category"
                    ),
                ),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("foreground_color", models.CharField(blank=True, max_length=9)),
                ("is_reviewable", models.BooleanField(default=True)),
                ("order_index", models.SmallIntegerField(default=0)),
                ("only_reviewer_can_publish", models.BooleanField(default=False)),
                (
                    "background_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_category",
                        to="files.image",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_categories",
                        to="organizations.organization",
                    ),
                ),
                ("organization_tags", models.ManyToManyField(to="misc.tag")),
                (
                    "template",
                    models.OneToOneField(
                        default=None,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="project_category",
                        to="organizations.template",
                    ),
                ),
                (
                    "wikipedia_tags",
                    models.ManyToManyField(
                        related_name="project_categories", to="misc.wikipediatag"
                    ),
                ),
            ],
            options={
                "ordering": ["organization__code", "order_index"],
            },
            bases=(models.Model, apps.commons.db.abc.OrganizationRelated),
        ),
        migrations.CreateModel(
            name="HistoricalProjectCategory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="name of the category", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="description of the category"
                    ),
                ),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("foreground_color", models.CharField(blank=True, max_length=9)),
                ("is_reviewable", models.BooleanField(default=True)),
                ("order_index", models.SmallIntegerField(default=0)),
                ("only_reviewer_can_publish", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "background_image",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="files.image",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.organization",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.template",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical project category",
                "verbose_name_plural": "historical project categorys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
