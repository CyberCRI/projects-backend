# Generated by Django 4.2.22 on 2025-09-29 16:05

import apps.commons.enums
import apps.commons.mixins
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("files", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalProjectCategory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="name of the category", max_length=100),
                ),
                ("slug", models.SlugField()),
                (
                    "outdated_slugs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.SlugField(), default=list, size=None
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="description of the category"
                    ),
                ),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("foreground_color", models.CharField(blank=True, max_length=9)),
                ("is_reviewable", models.BooleanField(default=True)),
                ("order_index", models.SmallIntegerField(default=0)),
                ("only_reviewer_can_publish", models.BooleanField(default=False)),
                ("is_root", models.BooleanField(default=False)),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_fr",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_de",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_nl",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_et",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_ca",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "name_es",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_fr",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_nl",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_et",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_ca",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "description_es",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical project category",
                "verbose_name_plural": "historical project categorys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50, unique=True)),
                ("website_url", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("dashboard_title", models.CharField(max_length=255)),
                ("dashboard_subtitle", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("contact_email", models.EmailField(blank=True, max_length=255)),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("chat_url", models.URLField(blank=True, max_length=255)),
                ("chat_button_text", models.CharField(blank=True, max_length=255)),
                ("auto_translate_content", models.BooleanField(default=False)),
                (
                    "languages",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("en", "English"),
                                ("fr", "Français"),
                                ("de", "Deutsch"),
                                ("nl", "Dutch"),
                                ("et", "Estonian"),
                                ("ca", "Catalan"),
                                ("es", "Español"),
                            ],
                            max_length=2,
                        ),
                        default=apps.commons.enums.Language.default_list,
                        size=None,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "Français"),
                            ("de", "Deutsch"),
                            ("nl", "Dutch"),
                            ("et", "Estonian"),
                            ("ca", "Catalan"),
                            ("es", "Español"),
                        ],
                        default="en",
                        max_length=2,
                    ),
                ),
                ("onboarding_enabled", models.BooleanField(default=True)),
                (
                    "is_logo_visible_on_parent_dashboard",
                    models.BooleanField(default=True),
                ),
                ("access_request_enabled", models.BooleanField(default=True)),
                ("force_login_form_display", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("permissions_up_to_date", models.BooleanField(default=False)),
                ("name_en", models.CharField(blank=True, max_length=255, null=True)),
                ("name_fr", models.CharField(blank=True, max_length=255, null=True)),
                ("name_de", models.CharField(blank=True, max_length=255, null=True)),
                ("name_nl", models.CharField(blank=True, max_length=255, null=True)),
                ("name_et", models.CharField(blank=True, max_length=255, null=True)),
                ("name_ca", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("name_es", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "dashboard_title_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_fr",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_de",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_nl",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_et",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_ca",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_title_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "dashboard_title_es",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_fr",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_de",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_nl",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_et",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_ca",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dashboard_subtitle_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "dashboard_subtitle_es",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_et", models.TextField(blank=True, null=True)),
                ("description_ca", models.TextField(blank=True, null=True)),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("description_es", models.TextField(blank=True, null=True)),
                (
                    "chat_button_text_en",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_fr",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_de",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_nl",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_et",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_ca",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "chat_button_text_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "chat_button_text_es",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "permissions": (
                    ("access_admin", "Can access the admin panel"),
                    ("view_stat", "Can view stats"),
                    ("view_org_project", "Can view community projects"),
                    ("view_org_projectuser", "Can view community users"),
                    ("view_org_peoplegroup", "Can view community groups"),
                    ("lock_project", "Can lock and unlock a project"),
                    ("duplicate_project", "Can duplicate a project"),
                    ("change_locked_project", "Can update a locked project"),
                    ("manage_accessrequest", "Can manage access requests"),
                    ("view_project", "Can view projects"),
                    ("add_project", "Can add projects"),
                    ("change_project", "Can change projects"),
                    ("delete_project", "Can delete projects"),
                    ("view_projectmessage", "Can view project messages"),
                    ("add_projectmessage", "Can add project messages"),
                    ("change_projectmessage", "Can change project messages"),
                    ("delete_projectmessage", "Can delete project messages"),
                    ("view_projectuser", "Can view users"),
                    ("add_projectuser", "Can add users"),
                    ("change_projectuser", "Can change users"),
                    ("delete_projectuser", "Can delete users"),
                    ("view_peoplegroup", "Can view groups"),
                    ("add_peoplegroup", "Can add groups"),
                    ("change_peoplegroup", "Can change groups"),
                    ("delete_peoplegroup", "Can delete groups"),
                    ("view_news", "Can view news"),
                    ("add_news", "Can add news"),
                    ("change_news", "Can change news"),
                    ("delete_news", "Can delete news"),
                    ("view_event", "Can view event"),
                    ("add_event", "Can add event"),
                    ("change_event", "Can change event"),
                    ("delete_event", "Can delete event"),
                    ("view_instruction", "Can view instructions"),
                    ("add_instruction", "Can add instructions"),
                    ("change_instruction", "Can change instructions"),
                    ("delete_instruction", "Can delete instructions"),
                    ("view_organizationattachmentfile", "Can view organization files"),
                    ("add_organizationattachmentfile", "Can add organization files"),
                    (
                        "change_organizationattachmentfile",
                        "Can change organization files",
                    ),
                    (
                        "delete_organizationattachmentfile",
                        "Can delete organization files",
                    ),
                    ("add_tag", "Can add tags"),
                    ("change_tag", "Can change tags"),
                    ("delete_tag", "Can delete tags"),
                    ("add_tagclassification", "Can add tag classifications"),
                    ("change_tagclassification", "Can change tag classifications"),
                    ("delete_tagclassification", "Can delete tag classifications"),
                    ("add_projectcategory", "Can add project categories"),
                    ("change_projectcategory", "Can change project categories"),
                    ("delete_projectcategory", "Can delete project categories"),
                    ("add_review", "Can add reviews"),
                    ("change_review", "Can change reviews"),
                    ("delete_review", "Can delete reviews"),
                    ("add_comment", "Can add comments"),
                    ("change_comment", "Can change comments"),
                    ("delete_comment", "Can delete comments"),
                    ("add_follow", "Can add follows"),
                    ("change_follow", "Can change follows"),
                    ("delete_follow", "Can delete follows"),
                    ("add_invitation", "Can add invitation links"),
                    ("change_invitation", "Can change invitation links"),
                    ("delete_invitation", "Can delete invitation links"),
                ),
                "subscopes": (
                    ("project", "projects"),
                    ("projectmessage", "project messages"),
                    ("projectuser", "users"),
                    ("peoplegroup", "groups"),
                    ("news", "news"),
                    ("event", "event"),
                    ("instruction", "instructions"),
                    ("organizationattachmentfile", "organization files"),
                ),
                "write_only_subscopes": (
                    ("tag", "tags"),
                    ("tagclassification", "tag classifications"),
                    ("projectcategory", "project categories"),
                    ("review", "reviews"),
                    ("comment", "comments"),
                    ("follow", "follows"),
                    ("invitation", "invitation links"),
                ),
            },
            bases=(
                apps.commons.mixins.HasPermissionsSetup,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="TermsAndConditions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.IntegerField(default=1)),
                ("content", models.TextField(blank=True, default="")),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content_en", models.TextField(blank=True, default="", null=True)),
                ("content_fr", models.TextField(blank=True, default="", null=True)),
                ("content_de", models.TextField(blank=True, default="", null=True)),
                ("content_nl", models.TextField(blank=True, default="", null=True)),
                ("content_et", models.TextField(blank=True, default="", null=True)),
                ("content_ca", models.TextField(blank=True, default="", null=True)),
                (
                    "content_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("content_es", models.TextField(blank=True, default="", null=True)),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terms_and_conditions",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(apps.commons.mixins.OrganizationRelated, models.Model),
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_placeholder",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                ("description_placeholder", models.TextField(blank=True, default="")),
                (
                    "goal_placeholder",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "blogentry_title_placeholder",
                    models.TextField(blank=True, default="", max_length=255),
                ),
                ("blogentry_placeholder", models.TextField(blank=True, default="")),
                ("goal_title", models.CharField(blank=True, max_length=255)),
                ("goal_description", models.TextField(blank=True)),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "Français"),
                            ("de", "Deutsch"),
                            ("nl", "Dutch"),
                            ("et", "Estonian"),
                            ("ca", "Catalan"),
                            ("es", "Español"),
                        ],
                        default="en",
                        max_length=2,
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(related_name="templates", to="files.image"),
                ),
            ],
            bases=(apps.commons.mixins.OrganizationRelated, models.Model),
        ),
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="name of the category", max_length=100),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "outdated_slugs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.SlugField(), default=list, size=None
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="description of the category"
                    ),
                ),
                ("background_color", models.CharField(blank=True, max_length=9)),
                ("foreground_color", models.CharField(blank=True, max_length=9)),
                ("is_reviewable", models.BooleanField(default=True)),
                ("order_index", models.SmallIntegerField(default=0)),
                ("only_reviewer_can_publish", models.BooleanField(default=False)),
                ("is_root", models.BooleanField(default=False)),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_fr",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_de",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_nl",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_et",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_ca",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "name_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "name_es",
                    models.CharField(
                        blank=True,
                        help_text="name of the category",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_fr",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_de",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_nl",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_et",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_ca",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "description_es",
                    models.TextField(
                        blank=True, help_text="description of the category", null=True
                    ),
                ),
                (
                    "background_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_category",
                        to="files.image",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_categories",
                        to="organizations.organization",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="organizations.projectcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["organization__code", "order_index"],
            },
            bases=(
                apps.commons.mixins.HasMultipleIDs,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
        ),
    ]
