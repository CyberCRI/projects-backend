# Generated by Django 4.2.22 on 2025-10-21 12:51

from bs4 import BeautifulSoup
from django.db import migrations, models
import django.db.models.deletion
from django.urls import reverse


def new_template_model(apps, schema_editor):    
    ProjectCategory = apps.get_model("organizations", "ProjectCategory")
    Template = apps.get_model("organizations", "Template")
    Project = apps.get_model("projects", "Project")
    Image = apps.get_model("files", "Image")

    for template in Template.objects.all():
        category = ProjectCategory.objects.filter(template=template)
        if category.exists():
            category = category.get()
            organization = category.organization
            template.organization = organization
            template.save()

    for template in Template.objects.all():
        if not template.organization:
            continue
        for field in [
            "description",
            "project_description",
            "project_purpose",
            "blogentry_content",
            "goal_description",
            "review_description",
            "comment_content",
        ]:
            text = getattr(template, field)
            soup = BeautifulSoup(text, features="html.parser")
            images_tags = soup.findAll("img")
            for image_tag in images_tags:
                image_url = image_tag["src"]
                if image_url.startswith("/v1/category/") and "/template-image/" in image_url:
                    image_id = (
                        image_url.split("/")[-1]
                        if image_url[-1] != "/"
                        else image_url.split("/")[-2]
                    )
                    image = Image.objects.filter(id=image_id)
                    if image.exists():
                        image = image.get()
                        template.images.add(image)
                    new_url = reverse(
                        "Template-images-detail",
                        args=(template.organization.code, template.id, image_id),
                    )
                    text = text.replace(image_url, new_url)
                    setattr(template, field, text)
                    template.save()
                    template.refresh_from_db()
    
    for project in Project.objects.all():
        if project.main_category and project.main_category.template:
            Project.objects.filter(id=project.id).update(
                template=project.main_category.template
            )


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0022_historicalproject_template_project_template"),
        ("skills", "0015_alter_tagclassification_description_ca_and_more"),
        ("organizations", "0031_alter_historicalprojectcategory_name_ca_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="organization",
            options={
                "permissions": (
                    ("access_admin", "Can access the admin panel"),
                    ("view_stat", "Can view stats"),
                    ("view_org_project", "Can view community projects"),
                    ("view_org_projectuser", "Can view community users"),
                    ("view_org_peoplegroup", "Can view community groups"),
                    ("lock_project", "Can lock and unlock a project"),
                    ("duplicate_project", "Can duplicate a project"),
                    ("change_locked_project", "Can update a locked project"),
                    ("manage_accessrequest", "Can manage access requests"),
                    ("view_project", "Can view projects"),
                    ("add_project", "Can add projects"),
                    ("change_project", "Can change projects"),
                    ("delete_project", "Can delete projects"),
                    ("view_projectmessage", "Can view project messages"),
                    ("add_projectmessage", "Can add project messages"),
                    ("change_projectmessage", "Can change project messages"),
                    ("delete_projectmessage", "Can delete project messages"),
                    ("view_projectuser", "Can view users"),
                    ("add_projectuser", "Can add users"),
                    ("change_projectuser", "Can change users"),
                    ("delete_projectuser", "Can delete users"),
                    ("view_peoplegroup", "Can view groups"),
                    ("add_peoplegroup", "Can add groups"),
                    ("change_peoplegroup", "Can change groups"),
                    ("delete_peoplegroup", "Can delete groups"),
                    ("view_news", "Can view news"),
                    ("add_news", "Can add news"),
                    ("change_news", "Can change news"),
                    ("delete_news", "Can delete news"),
                    ("view_event", "Can view event"),
                    ("add_event", "Can add event"),
                    ("change_event", "Can change event"),
                    ("delete_event", "Can delete event"),
                    ("view_instruction", "Can view instructions"),
                    ("add_instruction", "Can add instructions"),
                    ("change_instruction", "Can change instructions"),
                    ("delete_instruction", "Can delete instructions"),
                    ("view_organizationattachmentfile", "Can view organization files"),
                    ("add_organizationattachmentfile", "Can add organization files"),
                    (
                        "change_organizationattachmentfile",
                        "Can change organization files",
                    ),
                    (
                        "delete_organizationattachmentfile",
                        "Can delete organization files",
                    ),
                    ("add_tag", "Can add tags"),
                    ("change_tag", "Can change tags"),
                    ("delete_tag", "Can delete tags"),
                    ("add_tagclassification", "Can add tag classifications"),
                    ("change_tagclassification", "Can change tag classifications"),
                    ("delete_tagclassification", "Can delete tag classifications"),
                    ("add_projectcategory", "Can add project categories"),
                    ("change_projectcategory", "Can change project categories"),
                    ("delete_projectcategory", "Can delete project categories"),
                    ("add_template", "Can add templates"),
                    ("change_template", "Can change templates"),
                    ("delete_template", "Can delete templates"),
                    ("add_review", "Can add reviews"),
                    ("change_review", "Can change reviews"),
                    ("delete_review", "Can delete reviews"),
                    ("add_comment", "Can add comments"),
                    ("change_comment", "Can change comments"),
                    ("delete_comment", "Can delete comments"),
                    ("add_follow", "Can add follows"),
                    ("change_follow", "Can change follows"),
                    ("delete_follow", "Can delete follows"),
                    ("add_invitation", "Can add invitation links"),
                    ("change_invitation", "Can change invitation links"),
                    ("delete_invitation", "Can delete invitation links"),
                )
            },
        ),
        migrations.RenameField(
            model_name="template",
            old_name="description_placeholder",
            new_name="project_description",
        ),
        migrations.RenameField(
            model_name="template",
            old_name="title_placeholder",
            new_name="project_title",
        ),
        migrations.RenameField(
            model_name="template",
            old_name="goal_placeholder",
            new_name="project_purpose",
        ),
        migrations.RenameField(
            model_name="template",
            old_name="blogentry_placeholder",
            new_name="blogentry_content",
        ),
        migrations.RenameField(
            model_name="template",
            old_name="blogentry_title_placeholder",
            new_name="blogentry_title",
        ),
        migrations.AddField(
            model_name="template",
            name="description",
            field=models.TextField(blank=True, default=""),
        ),
        migrations.AddField(
            model_name="template",
            name="name",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name="template",
            name="project_tags",
            field=models.ManyToManyField(
                blank=True, related_name="templates", to="skills.tag"
            ),
        ),
        migrations.AddField(
            model_name="template",
            name="audience",
            field=models.CharField(
                blank=True,
                choices=[
                    ("primary", "Primary"),
                    ("middle", "Middle"),
                    ("high", "High"),
                    ("bachelor", "Bachelor"),
                    ("master", "Master"),
                    ("phd", "Phd"),
                    ("work", "Work"),
                ],
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="template",
            name="review_description",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="template",
            name="review_title",
            field=models.CharField(blank=True, default="", max_length=255),
        ),
        migrations.AddField(
            model_name="template",
            name="share_globally",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="template",
            name="time_estimation",
            field=models.CharField(
                blank=True,
                choices=[
                    ("1-10hrs", "H1 H10"),
                    ("11-40hrs", "H11 H40"),
                    ("41-120hrs", "H41 H120"),
                    ("Over 120hrs", "H121 Plus"),
                ],
                max_length=20,
            ),
        ),
        migrations.RenameField(
            model_name="template",
            old_name="comment",
            new_name="comment_content",
        ),
        migrations.AddField(
            model_name="template",
            name="organization",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="templates",
                to="organizations.organization",
            ),
        ),
        migrations.CreateModel(
            name="TemplateCategories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("always_use", models.BooleanField(default=False)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.projectcategory",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.template",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="template",
            name="categories",
            field=models.ManyToManyField(
                blank=True,
                related_name="templates",
                through="organizations.TemplateCategories",
                to="organizations.projectcategory",
            ),
        ),
        migrations.AlterField(
            model_name="template",
            name="goal_title",
            field=models.CharField(blank=True, default="", max_length=255),
        ),
        migrations.AlterField(
            model_name="template",
            name="project_purpose",
            field=models.TextField(blank=True, default=""),
        ),
        migrations.RunPython(code=new_template_model, reverse_code=migrations.RunPython.noop),
    ]
