# Generated by Django 4.2.18 on 2025-03-24 14:47

import django.contrib.postgres.fields
from django.db import migrations, models
from django.utils.text import slugify


def _get_id_field_name(object_id: str) -> str:
    try:
        int(object_id)
        return "id"
    except ValueError:
        return "slug"


def generate_slug_for_existing_categories(apps, schema_editor):
    ProjectCategory = apps.get_model("organizations", "ProjectCategory")
    HistoricalProjectCategory = apps.get_model("organizations", "HistoricalProjectCategory")
    db_alias = schema_editor.connection.alias
    categories = ProjectCategory.objects.using(db_alias).filter(slug__isnull=True)
    for category in categories:
        raw_slug = [category.name]
        raw_slug = slugify("-".join(raw_slug)[0:46])
        if not raw_slug or raw_slug == "-":
            raw_slug = "category"
        # If there is a potential clash with another identifier, add the prefix
        while _get_id_field_name(raw_slug) != "slug":
            raw_slug = f"categories-{raw_slug}"
        same_slug_count = 0
        slug = raw_slug
        while ProjectCategory.objects.filter(slug=slug).exists() or slug == "category":            
            same_slug_count += 1
            slug = f"{raw_slug}-{same_slug_count}"
        ProjectCategory.objects.filter(id=category.id).update(slug=slug)
        HistoricalProjectCategory.objects.using(db_alias).filter(id=category.id).update(slug=slug)
    HistoricalProjectCategory.objects.using(db_alias).filter(slug__isnull=True).delete()


class Migration(migrations.Migration):

    dependencies = [
        (
            "organizations",
            "0019_alter_organization_options_remove_organization_faq_and_more",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalprojectcategory",
            name="outdated_slugs",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.SlugField(), default=list, size=None
            ),
        ),
        migrations.AddField(
            model_name="historicalprojectcategory",
            name="slug",
            field=models.SlugField(null=True),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="outdated_slugs",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.SlugField(), default=list, size=None
            ),
        ),
        migrations.AddField(
            model_name="projectcategory",
            name="slug",
            field=models.SlugField(null=True, unique=True),
        ),
        migrations.RunPython(generate_slug_for_existing_categories, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='projectcategory',
            name='slug',
            field=models.SlugField(unique=True),
        ),
        migrations.AlterField(
            model_name='historicalprojectcategory',
            name='slug',
            field=models.SlugField(),
        ),
    ]
