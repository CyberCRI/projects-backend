# Generated by Django 3.2.12 on 2022-04-10 05:13
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from services.keycloak.interface import KeycloakService


def get_or_import_user(keycloak_id, queryset, project_user, db_alias) -> dict:
    user = queryset.filter(keycloak_id=keycloak_id)
    if user.exists():
        return user.first()
    keycloak_user = KeycloakService.get_user(keycloak_id)
    people_id = keycloak_user.get("attributes", {}).get("pid", [None])[0]
    if people_id and project_user.objects.using(db_alias).filter(people_id=people_id).exists():
        people_id = None
    return project_user.objects.using(db_alias).create(
        keycloak_id=keycloak_user.get("id", ""),
        people_id=people_id,
        email=keycloak_user.get("username", ""),
        given_name=keycloak_user.get("firstName", ""),
        family_name=keycloak_user.get("lastName", ""),
    )


def init_groups_and_permissions(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    Group = apps.get_model("accounts", "Group")  # noqa
    ProjectUser = apps.get_model("accounts", "ProjectUser")  # noqa

    default_group, _ = Group.objects.get_or_create(name="default")
    superadmins_group, _ = Group.objects.get_or_create(name="superadmins")

    superadmins = KeycloakService.get_superadmins()
    superadmins = [
        get_or_import_user(user["id"], ProjectUser.objects.using(db_alias).all(), ProjectUser, db_alias)
        for user in superadmins
    ]

    for user in superadmins:
        if superadmins_group not in user.groups.all():
            user.groups.add(superadmins_group)

    for user in ProjectUser.objects.using(db_alias).all():
        if default_group not in user.groups.all():
            user.groups.add(default_group)


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('accounts', '0003_projectuser_pronouns'),
    ]

    operations = [
        migrations.AddField(
            model_name='projectuser',
            name='is_superuser',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(max_length=255)),
                ('subscope', models.CharField(default='', max_length=255)),
                ('object_pk', models.CharField(default='', max_length=19)),
                ('action', models.CharField(max_length=255)),
                ('model', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('scope', 'subscope', 'object_pk', 'action')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('object_pk', models.CharField(default='', max_length=19)),
                ('model', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('permissions', models.ManyToManyField(related_name='groups', to='accounts.Permission')),
            ],
            options={
                'additional_actions': ('member',),
                'unique_together': {('name', 'model', 'object_pk')},
            },
        ),
        migrations.AddField(
            model_name='projectuser',
            name='groups',
            field=models.ManyToManyField(related_name='users', to='accounts.Group'),
        ),
        migrations.AddField(
            model_name='projectuser',
            name='permissions',
            field=models.ManyToManyField(related_name='users', to='accounts.Permission'),
        ),
        # migrations.RunPython(init_groups_and_permissions, migrations.RunPython.noop)
    ]
