# Generated by Django 4.2.22 on 2025-09-29 16:05

import apps.accounts.utils
import apps.commons.mixins
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProjectUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "people_id",
                    models.UUIDField(
                        help_text="id of user in people", null=True, unique=True
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        help_text="id of user in their organization",
                        max_length=255,
                    ),
                ),
                ("email", models.CharField(max_length=255, unique=True)),
                ("given_name", models.CharField(blank=True, max_length=255)),
                ("family_name", models.CharField(blank=True, max_length=255)),
                ("slug", models.SlugField(unique=True)),
                (
                    "outdated_slugs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.SlugField(), default=list, size=None
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "Français"),
                            ("de", "Deutsch"),
                            ("nl", "Dutch"),
                            ("et", "Estonian"),
                            ("ca", "Catalan"),
                            ("es", "Español"),
                        ],
                        default="en",
                        max_length=2,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "onboarding_status",
                    models.JSONField(
                        default=apps.accounts.utils.default_onboarding_status
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date.today
                            )
                        ],
                    ),
                ),
                ("pronouns", models.CharField(blank=True, max_length=32)),
                ("description", models.TextField(blank=True)),
                ("personal_description", models.TextField(blank=True)),
                ("professional_description", models.TextField(blank=True)),
                ("short_description", models.TextField(blank=True)),
                ("location", models.TextField(blank=True)),
                ("job", models.CharField(blank=True, max_length=255)),
                (
                    "sdgs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveSmallIntegerField(
                            choices=[
                                (1, "No poverty"),
                                (2, "Zero hunger"),
                                (3, "Good health and well-being"),
                                (4, "Quality education"),
                                (5, "Gender equality"),
                                (6, "Clean water and sanitation"),
                                (7, "Affordable and clean energy"),
                                (8, "Decent work and economic growth"),
                                (9, "Industry, innovation and infrastructure"),
                                (10, "Reduces inequalities"),
                                (11, "Sustainable cities and communities"),
                                (12, "Responsible consumption & production"),
                                (13, "Climate action"),
                                (14, "Life below water"),
                                (15, "Life on land"),
                                (16, "Peace, justice and strong institutions"),
                                (17, "Partnerships for the goals"),
                            ],
                            unique=True,
                        ),
                        default=list,
                        null=True,
                        size=17,
                    ),
                ),
                ("facebook", models.URLField(blank=True)),
                ("mobile_phone", models.CharField(blank=True, max_length=255)),
                ("linkedin", models.URLField(blank=True)),
                ("medium", models.URLField(blank=True)),
                ("website", models.CharField(blank=True, max_length=255)),
                ("personal_email", models.EmailField(blank=True, max_length=254)),
                ("skype", models.CharField(blank=True, max_length=255)),
                ("landline_phone", models.CharField(blank=True, max_length=255)),
                ("twitter", models.URLField(blank=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_et", models.TextField(blank=True, null=True)),
                ("description_ca", models.TextField(blank=True, null=True)),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("description_es", models.TextField(blank=True, null=True)),
                ("short_description_en", models.TextField(blank=True, null=True)),
                ("short_description_fr", models.TextField(blank=True, null=True)),
                ("short_description_de", models.TextField(blank=True, null=True)),
                ("short_description_nl", models.TextField(blank=True, null=True)),
                ("short_description_et", models.TextField(blank=True, null=True)),
                ("short_description_ca", models.TextField(blank=True, null=True)),
                (
                    "short_description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("short_description_es", models.TextField(blank=True, null=True)),
                ("job_en", models.CharField(blank=True, max_length=255, null=True)),
                ("job_fr", models.CharField(blank=True, max_length=255, null=True)),
                ("job_de", models.CharField(blank=True, max_length=255, null=True)),
                ("job_nl", models.CharField(blank=True, max_length=255, null=True)),
                ("job_et", models.CharField(blank=True, max_length=255, null=True)),
                ("job_ca", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "job_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("job_es", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "permissions": (("get_user_by_email", "Can retrieve a user by email"),),
            },
            bases=(
                apps.commons.mixins.HasMultipleIDs,
                apps.commons.mixins.HasOwner,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PeopleGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("slug", models.SlugField(unique=True)),
                (
                    "outdated_slugs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.SlugField(), default=list, size=None
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("short_description", models.TextField(blank=True)),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "sdgs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveSmallIntegerField(
                            choices=[
                                (1, "No poverty"),
                                (2, "Zero hunger"),
                                (3, "Good health and well-being"),
                                (4, "Quality education"),
                                (5, "Gender equality"),
                                (6, "Clean water and sanitation"),
                                (7, "Affordable and clean energy"),
                                (8, "Decent work and economic growth"),
                                (9, "Industry, innovation and infrastructure"),
                                (10, "Reduces inequalities"),
                                (11, "Sustainable cities and communities"),
                                (12, "Responsible consumption & production"),
                                (13, "Climate action"),
                                (14, "Life below water"),
                                (15, "Life on land"),
                                (16, "Peace, justice and strong institutions"),
                                (17, "Partnerships for the goals"),
                            ],
                            unique=True,
                        ),
                        default=list,
                        null=True,
                        size=17,
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("org", "Org"),
                        ],
                        default="org",
                        max_length=10,
                        verbose_name="visibility",
                    ),
                ),
                ("is_root", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("permissions_up_to_date", models.BooleanField(default=False)),
                ("name_en", models.CharField(blank=True, max_length=255, null=True)),
                ("name_fr", models.CharField(blank=True, max_length=255, null=True)),
                ("name_de", models.CharField(blank=True, max_length=255, null=True)),
                ("name_nl", models.CharField(blank=True, max_length=255, null=True)),
                ("name_et", models.CharField(blank=True, max_length=255, null=True)),
                ("name_ca", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "name_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("name_es", models.CharField(blank=True, max_length=255, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_et", models.TextField(blank=True, null=True)),
                ("description_ca", models.TextField(blank=True, null=True)),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("description_es", models.TextField(blank=True, null=True)),
                ("short_description_en", models.TextField(blank=True, null=True)),
                ("short_description_fr", models.TextField(blank=True, null=True)),
                ("short_description_de", models.TextField(blank=True, null=True)),
                ("short_description_nl", models.TextField(blank=True, null=True)),
                ("short_description_et", models.TextField(blank=True, null=True)),
                ("short_description_ca", models.TextField(blank=True, null=True)),
                (
                    "short_description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("short_description_es", models.TextField(blank=True, null=True)),
            ],
            bases=(
                apps.commons.mixins.HasMultipleIDs,
                apps.commons.mixins.HasPermissionsSetup,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="UserScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completeness", models.FloatField(default=0)),
                ("activity", models.FloatField(default=0)),
                ("score", models.FloatField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrivacySettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="pub",
                        max_length=4,
                    ),
                ),
                (
                    "profile_picture",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="org",
                        max_length=4,
                    ),
                ),
                (
                    "skills",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="pub",
                        max_length=4,
                    ),
                ),
                (
                    "mobile_phone",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="org",
                        max_length=4,
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="org",
                        max_length=4,
                    ),
                ),
                (
                    "socials",
                    models.CharField(
                        choices=[
                            ("hide", "Hide"),
                            ("org", "Organization"),
                            ("pub", "Public"),
                        ],
                        default="org",
                        max_length=4,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="privacy_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(models.Model, apps.commons.mixins.HasOwner),
        ),
    ]
