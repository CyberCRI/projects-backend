# Generated by Django 4.2.22 on 2025-09-29 16:05

import apps.commons.mixins
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Mentoring",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_mentorings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mentor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mentor_mentorings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mentoree",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mentoree_mentorings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mentorings",
                        to="organizations.organization",
                    ),
                ),
            ],
            bases=(
                models.Model,
                apps.commons.mixins.HasOwners,
                apps.commons.mixins.OrganizationRelated,
            ),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Wikipedia", "Wikipedia"),
                            ("ESCO", "Esco"),
                            ("Custom", "Custom"),
                        ],
                        default="Custom",
                        max_length=255,
                    ),
                ),
                (
                    "secondary_type",
                    models.CharField(
                        choices=[
                            ("skill", "Skill"),
                            ("occupation", "Occupation"),
                            ("tag", "Tag"),
                        ],
                        default="tag",
                        max_length=255,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("title_en", models.CharField(max_length=255, null=True)),
                ("title_fr", models.CharField(max_length=255, null=True)),
                ("title_de", models.CharField(max_length=255, null=True)),
                ("title_nl", models.CharField(max_length=255, null=True)),
                ("title_et", models.CharField(max_length=255, null=True)),
                ("title_ca", models.CharField(max_length=255, null=True)),
                ("title_es", models.CharField(max_length=255, null=True)),
                ("alternative_titles", models.TextField(blank=True)),
                ("alternative_titles_en", models.TextField(blank=True, null=True)),
                ("alternative_titles_fr", models.TextField(blank=True, null=True)),
                ("alternative_titles_de", models.TextField(blank=True, null=True)),
                ("alternative_titles_nl", models.TextField(blank=True, null=True)),
                ("alternative_titles_et", models.TextField(blank=True, null=True)),
                ("alternative_titles_ca", models.TextField(blank=True, null=True)),
                ("alternative_titles_es", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_et", models.TextField(blank=True, null=True)),
                ("description_ca", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("external_id", models.CharField(max_length=2048, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="custom_tags",
                        to="organizations.organization",
                    ),
                ),
            ],
            bases=(models.Model, apps.commons.mixins.OrganizationRelated),
        ),
        migrations.CreateModel(
            name="TagClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Wikipedia", "Wikipedia"),
                            ("ESCO", "Esco"),
                            ("Custom", "Custom"),
                        ],
                        default="Custom",
                        max_length=255,
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=50)),
                ("slug", models.SlugField(unique=True)),
                (
                    "outdated_slugs",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.SlugField(), default=list, size=None
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=500)),
                ("title_en", models.CharField(blank=True, max_length=50, null=True)),
                ("title_fr", models.CharField(blank=True, max_length=50, null=True)),
                ("title_de", models.CharField(blank=True, max_length=50, null=True)),
                ("title_nl", models.CharField(blank=True, max_length=50, null=True)),
                ("title_et", models.CharField(blank=True, max_length=50, null=True)),
                ("title_ca", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "title_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("title_es", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "description_en",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_fr",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_de",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_nl",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_et",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_ca",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "description_es",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tag_classifications",
                        to="organizations.organization",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="tag_classifications", to="skills.tag"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                apps.commons.mixins.HasMultipleIDs,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("skill", "Skill"), ("hobby", "Hobby")],
                        default="skill",
                        max_length=8,
                    ),
                ),
                ("level", models.SmallIntegerField()),
                ("level_to_reach", models.SmallIntegerField()),
                ("category", models.CharField(blank=True, default="", max_length=255)),
                ("can_mentor", models.BooleanField(default=False)),
                ("needs_mentor", models.BooleanField(default=False)),
                ("comment", models.TextField(blank=True, default="")),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to="skills.tag",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(models.Model, apps.commons.mixins.HasOwner),
        ),
        migrations.CreateModel(
            name="MentoringMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("content_en", models.TextField(blank=True, null=True)),
                ("content_fr", models.TextField(blank=True, null=True)),
                ("content_de", models.TextField(blank=True, null=True)),
                ("content_nl", models.TextField(blank=True, null=True)),
                ("content_et", models.TextField(blank=True, null=True)),
                ("content_ca", models.TextField(blank=True, null=True)),
                (
                    "content_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("content_es", models.TextField(blank=True, null=True)),
                (
                    "mentoring",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="skills.mentoring",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_mentoring_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
            bases=(
                apps.commons.mixins.HasOwner,
                apps.commons.mixins.OrganizationRelated,
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name="mentoring",
            name="skill",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mentorings",
                to="skills.skill",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mentoring",
            unique_together={("mentor", "mentoree", "skill")},
        ),
    ]
