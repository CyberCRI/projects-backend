# Generated by Django 4.2.22 on 2025-09-29 16:05

import apps.commons.mixins
from django.db import migrations, models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("content_en", models.TextField(blank=True, null=True)),
                ("content_fr", models.TextField(blank=True, null=True)),
                ("content_de", models.TextField(blank=True, null=True)),
                ("content_nl", models.TextField(blank=True, null=True)),
                ("content_et", models.TextField(blank=True, null=True)),
                ("content_ca", models.TextField(blank=True, null=True)),
                (
                    "content_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("content_es", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
            bases=(
                apps.commons.mixins.HasOwner,
                apps.commons.mixins.ProjectRelated,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
            bases=(
                apps.commons.mixins.HasOwner,
                apps.commons.mixins.ProjectRelated,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="HistoricalComment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("content", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("deleted_at", models.DateTimeField(default=None, null=True)),
                ("content_en", models.TextField(blank=True, null=True)),
                ("content_fr", models.TextField(blank=True, null=True)),
                ("content_de", models.TextField(blank=True, null=True)),
                ("content_nl", models.TextField(blank=True, null=True)),
                ("content_et", models.TextField(blank=True, null=True)),
                ("content_ca", models.TextField(blank=True, null=True)),
                (
                    "content_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("content_es", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical comment",
                "verbose_name_plural": "historical comments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFollow",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical follow",
                "verbose_name_plural": "historical follows",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("title", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_de", models.TextField(blank=True, null=True)),
                ("description_nl", models.TextField(blank=True, null=True)),
                ("description_et", models.TextField(blank=True, null=True)),
                ("description_ca", models.TextField(blank=True, null=True)),
                (
                    "description_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("description_es", models.TextField(blank=True, null=True)),
                ("title_en", models.CharField(blank=True, max_length=100, null=True)),
                ("title_fr", models.CharField(blank=True, max_length=100, null=True)),
                ("title_de", models.CharField(blank=True, max_length=100, null=True)),
                ("title_nl", models.CharField(blank=True, max_length=100, null=True)),
                ("title_et", models.CharField(blank=True, max_length=100, null=True)),
                ("title_ca", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "title_detected_language",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("title_es", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(
                apps.commons.mixins.HasOwner,
                apps.commons.mixins.ProjectRelated,
                models.Model,
            ),
        ),
    ]
